name: oidc-poc
on: push

jobs:
  auth:
    permissions:
      contents: read
      id-token: write

    runs-on: comcast-ubuntu-latest
    env:
      POC_URL: "https://hts2.jfrog.io"
      
    steps:
      - name: Get id token
        run: |
          ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=jfrog-github" | jq .value | tr -d '"')
          echo "ID_TOKEN=${ID_TOKEN}" >> $GITHUB_ENV
          echo "::add-mask::${ID_TOKEN}"  # Mask the ID token for security
      - name: Exchange token with access
        env:
          ID_TOKEN: ${{ env.ID_TOKEN }}
        run: |
          # Perform the token exchange and capture the response
          RESPONSE=$(curl -s -X POST "${POC_URL}/token" -d "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:access_token\", \"subject_token\": \"$ID_TOKEN\", \"provider_name\": \"github-oidc\"}")
          
          # Debug the raw response from the token exchange
          echo "Token exchange response: $RESPONSE"
          
          # Extract the access token from the response
          ACCESS_TOKEN=$(echo $RESPONSE | jq -r .access_token)
          # Check if ACCESS_TOKEN is empty, and exit with an error if it is
          if [[ -z "$ACCESS_TOKEN" ]]; then
            echo "Error: ACCESS_TOKEN not found in response."
            exit 1
          fi
          # Output the access token and mask it for security
          echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV
          echo "::add-mask::${ACCESS_TOKEN}"
      - name: Checkout
        uses: actions/checkout@v2

      - name: Upload File to Artifactory
        run: |
          echo "This is a test file" > testupload.txt
          curl -X PUT "${POC_URL}/artifactory/plugintest-npm/testupload.txt" \
            -H "Authorization: Bearer ${{ env.ACCESS_TOKEN }}" \
            -T testupload.txt \
            -vvv
      - name: Download File from Artifactory
        run: |
          curl -X GET "${POC_URL}/artifactory/plugintest-npm/testupload.txt" \
            -H "Authorization: Bearer ${{ env.ACCESS_TOKEN }}" \
            -o testdownload.txt
          cat testdownload.txt
